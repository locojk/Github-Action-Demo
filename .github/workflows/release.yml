name: Release

on:
  push:
    branches:
      - main
      - alpha
      - beta

jobs:
  test:
    name: Test and lint
    uses: open-sauced/open-sauced/.github/workflows/development.yml@main

  docker:
    name: Build container
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v2

      - name: "🔧 Setup buildx"
        uses: docker/setup-buildx-action@v2

      - name: "🔧 Cache Docker layers"
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: "🔧 Docker meta"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }}
          tags: latest

      - name: "📦 Docker build"
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/docker.tar
          push: false
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      - name: "📂 Docker artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: docker
          path: /tmp/docker.tar

  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v4

      - name: "🔧 Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: "📦 Install dependencies"
        uses: bahmutov/npm-install@v1

      - name: "📊 Repository visualizer"
        id: diagram
        uses: githubocto/repo-visualizer@0.7.1
        with:
          excluded_paths: "node_modules,build,.storybook,.netlify,.github,npm-shrinkwrap.json"
          output_file: "public/diagram.svg"
          should_push: false
          root_path: "src/"
          artifact_name: "diagram"

      - name: "🚀 Build static app"
        run: npm run build

      - name: "📂 Production artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  release:
    name: Semantic release
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/releases/tag/${{ steps.semantic-release.outputs.release-tag }}
    needs:
      - test
      - docker
      - build
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "📂 Download Docker artifacts"
        uses: actions/download-artifact@v3
        with:
          name: docker
          path: /tmp

      - name: "📦 Load Docker tag"
        run: |
          docker load --input /tmp/docker.tar
          docker image ls -a

      - name: "📂 Download build artifacts"
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: "📂 Download diagram artifacts"
        uses: actions/download-artifact@v3
        with:
          name: diagram
          path: .

      - name: "🚀 Release"
        id: semantic-release
        uses: open-sauced/semantic-release-conventional-config@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: Cleanup actions
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: "♻️ Remove build artifacts"
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            build
            docker
            diagram
