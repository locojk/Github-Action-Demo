name: Release

on:
  push:
    branches:
      - main
      - alpha
      - beta

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test and lint
    uses: ./.github/workflows/development.yml

  docker:
    name: Build container
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "🔧 Setup buildx"
        uses: docker/setup-buildx-action@v2

      - name: "🔧 Cache Docker layers"
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: latest

      # Build and push Docker image
      - name: "📦 Build and push Docker image"
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/docker.tar
          push: true
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      # Upload the Docker image as an artifact
      - name: "📂 Docker artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: docker
          path: /tmp/docker.tar

  release:
    name: Semantic release
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/releases/tag/${{ steps.semantic-release.outputs.release-tag }}
    needs:
      - test
      - docker
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "📂 Download Docker artifacts"
        uses: actions/download-artifact@v3
        with:
          name: docker
          path: /tmp

      - name: "📦 Load Docker tag"
        run: |
          docker load --input /tmp/docker.tar
          docker image ls -a

      - name: "🚀 Release"
        id: semantic-release
        uses: open-sauced/semantic-release-conventional-config@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: Cleanup actions
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: "♻️ Remove artifacts"
        uses: geekyeggo/delete-artifact@v1
        with:
          name: docker



